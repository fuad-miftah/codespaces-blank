// Generated by typescript generator


import { Blockchain } from "../../model/model";
import { BlockchainState } from "../../model/model";
import { ContainerState } from "../../model/model";
import { Provider } from "../../model/model";
import { ProviderQuota } from "../../model/model";
import { ProviderTier } from "../../model/model";
import { VoterSet } from "../../model/model";
import { QueryObject } from "postchain-client";

export type BlockchainInfo = {
	rid: Buffer;
	name: string;
	state: BlockchainState;
	container: string | null;
	cluster: string | null;
	system: boolean | null;
};

export type BlockchainSignersInfo = {
	height: number;
	signers: Buffer[];
};

export type ClusterData = {
	name: string;
	governor: string;
	is_operational: boolean;
	cluster_units: number | null;
	extra_storage: number | null;
	number_of_nodes: number;
};

export type ContainerData = {
	name: string;
	cluster: string;
	deployer: string;
	proposed_by_pubkey: Buffer;
	proposed_by_name: string;
	system: boolean;
	state: ContainerState | null;
};

export type NodeData = {
	provider: Buffer;
	pubkey: Buffer;
	active: boolean;
	host: string;
	port: number;
	last_updated: number;
	api_url: string;
	cluster_units: number | null;
	territory: string | null;
	extra_storage: number | null;
};

export type NodeInfo = {
	pubkey: Buffer;
	host: string;
	port: number;
	api_url: string;
	territory: string | null;
};

export function getClusterAnchoringConfigurationQueryObject(): QueryObject<Buffer> {
	return { name: "get_cluster_anchoring_configuration", args: undefined };
}

export function getBlockchainQueryObject(rid: Buffer): QueryObject<number> {
	return { name: "get_blockchain", args: { rid: rid } };
}

export function getBlockchainSignersQueryObject(blockchainRid: Buffer): QueryObject<[Buffer, string, number, boolean, number][]> {
	return { name: "get_blockchain_signers", args: { blockchain_rid: blockchainRid } };
}

export function getBlockchainReplicasQueryObject(blockchainRid: Buffer): QueryObject<[Buffer, string, number, boolean, number][]> {
	return { name: "get_blockchain_replicas", args: { blockchain_rid: blockchainRid } };
}

export function getBlockchainsQueryObject(includeInactive: boolean): QueryObject<Blockchain[]> {
	return { name: "get_blockchains", args: { include_inactive: includeInactive } };
}

export function getBlockchainInfoQueryObject(rid: Buffer): QueryObject<BlockchainInfo | null> {
	return { name: "get_blockchain_info", args: { rid: rid } };
}

export function getBlockchainInfoListQueryObject(includeInactive: boolean): QueryObject<BlockchainInfo[]> {
	return { name: "get_blockchain_info_list", args: { include_inactive: includeInactive } };
}

export function getBlockchainClusterQueryObject(blockchainRid: Buffer): QueryObject<string> {
	return { name: "get_blockchain_cluster", args: { blockchain_rid: blockchainRid } };
}

export function getBlockchainApiUrlsQueryObject(blockchainRid: Buffer): QueryObject<string[]> {
	return { name: "get_blockchain_api_urls", args: { blockchain_rid: blockchainRid } };
}

export function getBlockchainSignerUpdatesQueryObject(blockchainRid: Buffer,
	fromHeight: number): QueryObject<BlockchainSignersInfo[]> {
	return { name: "get_blockchain_signer_updates", args: { blockchain_rid: blockchainRid, from_height: fromHeight } };
}

export function getClusterQueryObject(name: string): QueryObject<number> {
	return { name: "get_cluster", args: { name: name } };
}

export type GetClustersReturnType = {
	name: string;
	governor: string;
	operational: boolean;
};
export function getClustersQueryObject(): QueryObject<GetClustersReturnType[]> {
	return { name: "get_clusters", args: undefined };
}

export function getClusterDataQueryObject(name: string): QueryObject<ClusterData> {
	return { name: "get_cluster_data", args: { name: name } };
}

export function getOperationalDappClustersQueryObject(): QueryObject<ClusterData[]> {
	return { name: "get_operational_dapp_clusters", args: undefined };
}

export type GetClusterProvidersReturnType = {
	name: string;
	pubkey: Buffer;
};
export function getClusterProvidersQueryObject(name: string): QueryObject<GetClusterProvidersReturnType[]> {
	return { name: "get_cluster_providers", args: { name: name } };
}

export type GetClusterNodesReturnType = {
	pubkey: Buffer;
	host: string;
	port: number;
	api_url: string;
	active: boolean;
};
export function getClusterNodesQueryObject(name: string): QueryObject<GetClusterNodesReturnType[]> {
	return { name: "get_cluster_nodes", args: { name: name } };
}

export type GetClusterReplicaNodesReturnType = {
	pubkey: Buffer;
	host: string;
	port: number;
	api_url: string;
	active: boolean;
};
export function getClusterReplicaNodesQueryObject(name: string): QueryObject<GetClusterReplicaNodesReturnType[]> {
	return { name: "get_cluster_replica_nodes", args: { name: name } };
}

export type GetClusterContainersReturnType = {
	name: string;
	deployer: string;
};
export function getClusterContainersQueryObject(clusterName: string): QueryObject<GetClusterContainersReturnType[]> {
	return { name: "get_cluster_containers", args: { cluster_name: clusterName } };
}

export function getClusterBlockchainsQueryObject(name: string): QueryObject<Buffer[]> {
	return { name: "get_cluster_blockchains", args: { name: name } };
}

export function getClusterApiUrlsQueryObject(name: string): QueryObject<string[]> {
	return { name: "get_cluster_api_urls", args: { name: name } };
}

export function getContainerQueryObject(name: string): QueryObject<number> {
	return { name: "get_container", args: { name: name } };
}

export function getContainerDataQueryObject(name: string): QueryObject<ContainerData> {
	return { name: "get_container_data", args: { name: name } };
}

export type GetContainerBlockchainReturnType = {
	rid: Buffer;
	name: string;
	system: boolean;
	state: BlockchainState;
};
export function getContainerBlockchainQueryObject(name: string): QueryObject<GetContainerBlockchainReturnType[]> {
	return { name: "get_container_blockchain", args: { name: name } };
}

export type GetContainersReturnType = {
	cluster: string;
	name: string;
	deployer: string;
};
export function getContainersQueryObject(): QueryObject<GetContainersReturnType[]> {
	return { name: "get_containers", args: undefined };
}

export function getNodeQueryObject(pubkey: Buffer): QueryObject<number> {
	return { name: "get_node", args: { pubkey: pubkey } };
}

export function getNodeDataQueryObject(pubkey: Buffer): QueryObject<NodeData> {
	return { name: "get_node_data", args: { pubkey: pubkey } };
}

export function listClustersOfNodeQueryObject(pubkey: Buffer): QueryObject<string[]> {
	return { name: "list_clusters_of_node", args: { pubkey: pubkey } };
}

export type GetNodeContainersReturnType = {
	cluster: string;
	name: string;
	deployer: string;
};
export function getNodeContainersQueryObject(pubkey: Buffer): QueryObject<GetNodeContainersReturnType[]> {
	return { name: "get_node_containers", args: { pubkey: pubkey } };
}

export type GetNodesWithProviderReturnType = {
	pubkey: Buffer;
	node_active: boolean;
	host: string;
	port: number;
	last_updated: number;
	name: string;
	provider_active: boolean;
	provider: Buffer;
};
export function getNodesWithProviderQueryObject(): QueryObject<GetNodesWithProviderReturnType[]> {
	return { name: "get_nodes_with_provider", args: undefined };
}

export type GetAllNodesReturnType = {
	info: NodeInfo;
	active: boolean;
	last_updated: number;
	provider: Provider;
};
export function getAllNodesQueryObject(includeInactive: boolean): QueryObject<GetAllNodesReturnType[]> {
	return { name: "get_all_nodes", args: { include_inactive: includeInactive } };
}

export function getProviderQueryObject(pubkey: Buffer): QueryObject<number> {
	return { name: "get_provider", args: { pubkey: pubkey } };
}

export type GetNodesByProviderReturnType = {
	pubkey: Buffer;
	active: boolean;
	host: string;
	port: number;
	api_url: string;
	last_updated: number;
	territory: string;
};
export function getNodesByProviderQueryObject(pubkey: Buffer): QueryObject<GetNodesByProviderReturnType[]> {
	return { name: "get_nodes_by_provider", args: { pubkey: pubkey } };
}

export function getProviderPointsQueryObject(pubkey: Buffer): QueryObject<number> {
	return { name: "get_provider_points", args: { pubkey: pubkey } };
}

export function getProviderClustersQueryObject(pubkey: Buffer): QueryObject<string[]> {
	return { name: "get_provider_clusters", args: { pubkey: pubkey } };
}

export function getProviderDataQueryObject(pubkey: Buffer): QueryObject<Provider> {
	return { name: "get_provider_data", args: { pubkey: pubkey } };
}

export function getAllProvidersQueryObject(): QueryObject<Provider[]> {
	return { name: "get_all_providers", args: undefined };
}

export function getProvidersQueryObject(tier: ProviderTier,
	system: boolean,
	requireActive: boolean): QueryObject<Provider[]> {
	return { name: "get_providers", args: { tier: tier, system: system, require_active: requireActive } };
}

export function getProviderQuotasQueryObject(): QueryObject<ProviderQuota[]> {
	return { name: "get_provider_quotas", args: undefined };
}

export function listVoterSetsQueryObject(): QueryObject<VoterSet[]> {
	return { name: "list_voter_sets", args: undefined };
}

export type GetVoterSetInfoReturnType = {
	name: string;
	threshold: number;
	governor: string;
	members: Buffer[];
};
export function getVoterSetInfoQueryObject(name: string): QueryObject<GetVoterSetInfoReturnType> {
	return { name: "get_voter_set_info", args: { name: name } };
}

export function getVoterSetQueryObject(name: string): QueryObject<number> {
	return { name: "get_voter_set", args: { name: name } };
}

export function getVoterSetGovernorQueryObject(name: string): QueryObject<string> {
	return { name: "get_voter_set_governor", args: { name: name } };
}

export function getVoterSetMembersQueryObject(name: string): QueryObject<Buffer[]> {
	return { name: "get_voter_set_members", args: { name: name } };
}

export type GetVoterSetsReturnType = {
	name: string;
	threshold: number;
	gorvernor: string;
};
export function getVoterSetsQueryObject(): QueryObject<GetVoterSetsReturnType[]> {
	return { name: "get_voter_sets", args: undefined };
}

export type GetSummaryReturnType = {
	providers: number;
	clusters: number;
	containers: number;
	voter_sets: number;
	nodes: number;
	blockchains: number;
};
export function getSummaryQueryObject(): QueryObject<GetSummaryReturnType> {
	return { name: "get_summary", args: undefined };
}
